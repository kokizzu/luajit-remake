; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/return_value_accessor_api_lowering.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { ptr addrspace(256), ptr, ptr, %1, i32 }
%1 = type { i32 }

@.str.4.4 = private unnamed_addr constant [125 x i8] c"(!(m_value >= x_minimum_valid_heap_address)) || (AsNoAssert<SystemHeapGcObjectHeader>()->m_type == TypeEnumForHeapObject<U>)\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"drt/memory_ptr.h\00", align 1
@__PRETTY_FUNCTION__._ZNK17SystemHeapPointerI14ExecutableCodeE2AsIS0_EEPU5AS256T_v.5 = private unnamed_addr constant [98 x i8] c"HeapPtr<U> SystemHeapPointer<ExecutableCode>::As() const [T = ExecutableCode, U = ExecutableCode]\00", align 1
@__deegen_interpreter_dispatch_table = external dso_local local_unnamed_addr constant [0 x ptr], align 8

; Function Attrs: mustprogress noinline noreturn nounwind uwtable
declare dso_local void @_Z17FireReleaseAssertPKcS0_jS0_(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind
define dso_local ghccc void @__deegen_interpreter_op_test2_0_retcont_0(ptr %0, ptr nocapture readonly %1, ptr nocapture readnone %2, ptr nocapture readnone %3, i64 %4, ptr nocapture readonly %retStart, i64 %numRet, i64 %5, i64 %6, i64 %7, double %8, double %9, double %10, double %11, double %12, double %13) #1 section "deegen_interpreter_code_section_hot" {
  %15 = getelementptr %0, ptr %1, i64 -1, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !2
  %17 = getelementptr %0, ptr %1, i64 -1, i32 3
  %18 = load i32, ptr %17, align 4, !tbaa !9
  %19 = load ptr, ptr addrspace(256) null, align 4294967296, !tbaa !10
  %20 = getelementptr inbounds %0, ptr %16, i64 -1
  %21 = load ptr addrspace(256), ptr %20, align 8, !tbaa !11
  %.sroa.0.0.copyload6.i.i.i = load i32, ptr addrspace(256) %21, align 4, !tbaa !12
  %22 = icmp ugt i32 %.sroa.0.0.copyload6.i.i.i, 63
  %23 = zext i32 %.sroa.0.0.copyload6.i.i.i to i64
  br i1 %22, label %24, label %__DeegenImpl_CommonSnippetLib_GetCodeBlockFromStackBase.exit

24:                                               ; preds = %14
  %25 = inttoptr i64 %23 to ptr addrspace(256)
  %26 = load i8, ptr addrspace(256) %25, align 1, !tbaa !13
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %__DeegenImpl_CommonSnippetLib_GetCodeBlockFromStackBase.exit, label %28

28:                                               ; preds = %24
  tail call void @_Z17FireReleaseAssertPKcS0_jS0_(ptr noundef nonnull @.str.4.4, ptr noundef nonnull @.str.5, i32 noundef 211, ptr noundef nonnull @__PRETTY_FUNCTION__._ZNK17SystemHeapPointerI14ExecutableCodeE2AsIS0_EEPU5AS256T_v.5) #2
  unreachable

__DeegenImpl_CommonSnippetLib_GetCodeBlockFromStackBase.exit: ; preds = %24, %14
  %29 = ptrtoint ptr %19 to i64
  %30 = zext i32 %18 to i64
  %31 = add i64 %29, %30
  %32 = inttoptr i64 %31 to ptr
  %33 = add i64 %23, %29
  %34 = inttoptr i64 %33 to ptr
  %35 = getelementptr inbounds i8, ptr %32, i64 2
  %36 = load i32, ptr %35, align 1
  %outputSlot = zext i32 %36 to i64
  %37 = getelementptr inbounds i64, ptr %retStart, i64 1
  %38 = load i64, ptr %37, align 8
  %39 = getelementptr inbounds i64, ptr %16, i64 %outputSlot
  store i64 %38, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %32, i64 10
  %41 = load i16, ptr %40, align 1
  %42 = zext i16 %41 to i64
  %43 = getelementptr inbounds [0 x ptr], ptr @__deegen_interpreter_dispatch_table, i64 0, i64 %42
  %44 = load ptr, ptr %43, align 8
  musttail call ghccc void %44(ptr %0, ptr nonnull %16, ptr nonnull %40, ptr %34, i64 %4, ptr undef, i64 undef, i64 undef, i64 undef, i64 %7, double undef, double undef, double undef, double undef, double undef, double undef) #3
  ret void
}

attributes #0 = { mustprogress noinline noreturn nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }
attributes #2 = { noreturn }
attributes #3 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!3, !4, i64 8}
!3 = !{!"_ZTS16StackFrameHeader", !4, i64 0, !4, i64 8, !4, i64 16, !7, i64 24, !8, i64 28}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!"_ZTS17SystemHeapPointerIhE", !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = !{!7, !8, i64 0}
!10 = !{!4, !4, i64 0}
!11 = !{!3, !4, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !15, i64 0}
!14 = !{!"_ZTS24SystemHeapGcObjectHeader", !15, i64 0, !16, i64 1}
!15 = !{!"_ZTS14HeapEntityType", !5, i64 0}
!16 = !{!"_ZTS11GcCellState", !5, i64 0}
